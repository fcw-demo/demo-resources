{
	"info": {
		"_postman_id": "3aca52e0-28ee-4faa-9e02-c09e49b8f7aa",
		"name": "WSO2 Identity Server - Application Management Rest API",
		"description": "This document specifies a **Application Management RESTful API** for **WSO2 Identity Server** .\n\n\nContact Support:\n Name: WSO2\n Email: architecture@wso2.org",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10461380"
	},
	"item": [
		{
			"name": "applications",
			"item": [
				{
					"name": "import",
					"item": [
						{
							"name": "Create application from an exported XML file\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "gu@rdioadmin#47",
											"type": "string"
										},
										{
											"key": "username",
											"value": "john@guardio.com",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications",
										"import"
									],
									"variable": [
										{
											"key": "tenant-domain",
											"value": "{{tenant-domain}}"
										},
										{
											"key": "server-url",
											"value": "{{server-url}}"
										}
									]
								},
								"description": "This API provides the capability to store the application information, provided as a file.\n"
							},
							"response": [
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Successfully created.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Location",
											"value": "<string>",
											"description": "Location of the newly created application."
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								}
							]
						},
						{
							"name": "Update application from an exported XML file\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "gu@rdioadmin#47",
											"type": "string"
										},
										{
											"key": "username",
											"value": "john@guardio.com",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>"
										}
									]
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications",
										"import"
									],
									"variable": [
										{
											"key": "tenant-domain",
											"value": "{{tenant-domain}}"
										},
										{
											"key": "server-url",
											"value": "{{server-url}}"
										}
									]
								},
								"description": "This API provides the capability to update an application from information that has been exported as an XML file.\n"
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Successfully Updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Location",
											"value": "<string>",
											"description": "Location of the updated application."
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/import",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"import"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{application Id}",
					"item": [
						{
							"name": "inbound-protocols",
							"item": [
								{
									"name": "saml",
									"item": [
										{
											"name": "Retrieve SAML2 authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"saml"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application."
														}
													]
												},
												"description": "This API provides the capability to retrieve SAML2 authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"issuer\": \"<string>\",\n \"assertionConsumerUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"serviceProviderQualifier\": \"<string>\",\n \"defaultAssertionConsumerUrl\": \"<string>\",\n \"idpEntityIdAlias\": \"<string>\",\n \"singleSignOnProfile\": {\n  \"bindings\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n  \"attributeConsumingServiceIndex\": \"<string>\",\n  \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n  \"assertion\": {\n   \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n   \"audiences\": [\n    \"https://app.example.com/saml\"\n   ],\n   \"recipients\": [\n    \"https://app.example.com/saml\"\n   ],\n   \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n   \"encryption\": {\n    \"enabled\": \"<boolean>\",\n    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n   }\n  }\n },\n \"attributeProfile\": {\n  \"enabled\": \"<boolean>\",\n  \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n },\n \"singleLogoutProfile\": {\n  \"enabled\": true,\n  \"logoutRequestUrl\": \"<string>\",\n  \"logoutResponseUrl\": \"<string>\",\n  \"logoutMethod\": \"<string>\",\n  \"idpInitiatedSingleLogout\": {\n   \"enabled\": \"<boolean>\",\n   \"returnToUrls\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n },\n \"requestValidation\": {\n  \"enableSignatureValidation\": true,\n  \"signatureValidationCertAlias\": \"<string>\"\n },\n \"responseSigning\": {\n  \"enabled\": true,\n  \"signingAlgorithm\": \"<string>\"\n },\n \"enableAssertionQueryProfile\": \"<boolean>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										},
										{
											"name": "Update SAML2 authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"manualConfiguration\": {\n        \"assertionConsumerUrls\": [\n            \"http://localhost:8080/travelocity.com/home.jsp\"\n        ],\n        \"attributeProfile\": {\n            \"alwaysIncludeAttributesInResponse\": false,\n            \"enabled\": false\n        },\n        \"defaultAssertionConsumerUrl\": \"http://localhost:8080/travelocity.com/home.jsp\",\n        \"enableAssertionQueryProfile\": false,\n        \"idpEntityIdAlias\": \"\",\n        \"issuer\": \"travelocity.com\",\n        \"requestValidation\": {\n            \"enableSignatureValidation\": true,\n            \"signatureValidationCertAlias\": \"wso2carbon\"\n        },\n        \"responseSigning\": {\n            \"enabled\": false,\n            \"signingAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"\n        },\n        \"serviceProviderQualifier\": \"\",\n        \"singleLogoutProfile\": {\n            \"enabled\": false,\n            \"idpInitiatedSingleLogout\": {\n                \"enabled\": false,\n                \"returnToUrls\": []\n            },\n            \"logoutMethod\": \"BACKCHANNEL\",\n            \"logoutResponseUrl\": \"\"\n        },\n        \"singleSignOnProfile\": {\n            \"assertion\": {\n                \"audiences\": [],\n                \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                \"encryption\": {\n                    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                    \"enabled\": false,\n                    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                },\n                \"nameIdFormat\": \"\",\n                \"recipients\": []\n            },\n            \"attributeConsumingServiceIndex\": \"\",\n            \"bindings\": [],\n            \"enableIdpInitiatedSingleSignOn\": false,\n            \"enableSignatureValidationForArtifactBinding\": false\n        }\n    }\n}"
												},
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"saml"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application."
														}
													]
												},
												"description": "This API provides the capability to store SAML2 authentication protocol parameters of an application.\n- There are three methods to create/update SAML2 authentication protocol configuration.\n    1. Metadata File (by sending the Base64 encoded content of the metadata file.)\n    2. Metadata URL\n    3. Manual configuration\n"
											},
											"response": [
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"metadataFile\": \"Base64 encoded metadata file content\",\n    \"metadataURL\": \"https://example.com/samlsso/meta\",\n    \"manualConfiguration\": {\n        \"issuer\": \"<string>\",\n        \"assertionConsumerUrls\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"serviceProviderQualifier\": \"<string>\",\n        \"defaultAssertionConsumerUrl\": \"<string>\",\n        \"idpEntityIdAlias\": \"<string>\",\n        \"singleSignOnProfile\": {\n            \"bindings\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n            \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n            \"assertion\": {\n                \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                \"audiences\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"recipients\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                \"encryption\": {\n                    \"enabled\": \"<boolean>\",\n                    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                }\n            }\n        },\n        \"attributeProfile\": {\n            \"enabled\": \"<boolean>\",\n            \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n        },\n        \"singleLogoutProfile\": {\n            \"enabled\": true,\n            \"logoutRequestUrl\": \"<string>\",\n            \"logoutResponseUrl\": \"<string>\",\n            \"logoutMethod\": \"<string>\",\n            \"idpInitiatedSingleLogout\": {\n                \"enabled\": \"<boolean>\",\n                \"returnToUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        },\n        \"requestValidation\": {\n            \"enableSignatureValidation\": true,\n            \"signatureValidationCertAlias\": \"<string>\"\n        },\n        \"responseSigning\": {\n            \"enabled\": true,\n            \"signingAlgorithm\": \"<string>\"\n        },\n        \"enableAssertionQueryProfile\": \"<boolean>\"\n    }\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"metadataFile\": \"Base64 encoded metadata file content\",\n    \"metadataURL\": \"https://example.com/samlsso/meta\",\n    \"manualConfiguration\": {\n        \"issuer\": \"<string>\",\n        \"assertionConsumerUrls\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"serviceProviderQualifier\": \"<string>\",\n        \"defaultAssertionConsumerUrl\": \"<string>\",\n        \"idpEntityIdAlias\": \"<string>\",\n        \"singleSignOnProfile\": {\n            \"bindings\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n            \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n            \"assertion\": {\n                \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                \"audiences\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"recipients\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                \"encryption\": {\n                    \"enabled\": \"<boolean>\",\n                    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                }\n            }\n        },\n        \"attributeProfile\": {\n            \"enabled\": \"<boolean>\",\n            \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n        },\n        \"singleLogoutProfile\": {\n            \"enabled\": true,\n            \"logoutRequestUrl\": \"<string>\",\n            \"logoutResponseUrl\": \"<string>\",\n            \"logoutMethod\": \"<string>\",\n            \"idpInitiatedSingleLogout\": {\n                \"enabled\": \"<boolean>\",\n                \"returnToUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        },\n        \"requestValidation\": {\n            \"enableSignatureValidation\": true,\n            \"signatureValidationCertAlias\": \"<string>\"\n        },\n        \"responseSigning\": {\n            \"enabled\": true,\n            \"signingAlgorithm\": \"<string>\"\n        },\n        \"enableAssertionQueryProfile\": \"<boolean>\"\n    }\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"metadataFile\": \"Base64 encoded metadata file content\",\n    \"metadataURL\": \"https://example.com/samlsso/meta\",\n    \"manualConfiguration\": {\n        \"issuer\": \"<string>\",\n        \"assertionConsumerUrls\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"serviceProviderQualifier\": \"<string>\",\n        \"defaultAssertionConsumerUrl\": \"<string>\",\n        \"idpEntityIdAlias\": \"<string>\",\n        \"singleSignOnProfile\": {\n            \"bindings\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n            \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n            \"assertion\": {\n                \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                \"audiences\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"recipients\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                \"encryption\": {\n                    \"enabled\": \"<boolean>\",\n                    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                }\n            }\n        },\n        \"attributeProfile\": {\n            \"enabled\": \"<boolean>\",\n            \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n        },\n        \"singleLogoutProfile\": {\n            \"enabled\": true,\n            \"logoutRequestUrl\": \"<string>\",\n            \"logoutResponseUrl\": \"<string>\",\n            \"logoutMethod\": \"<string>\",\n            \"idpInitiatedSingleLogout\": {\n                \"enabled\": \"<boolean>\",\n                \"returnToUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        },\n        \"requestValidation\": {\n            \"enableSignatureValidation\": true,\n            \"signatureValidationCertAlias\": \"<string>\"\n        },\n        \"responseSigning\": {\n            \"enabled\": true,\n            \"signingAlgorithm\": \"<string>\"\n        },\n        \"enableAssertionQueryProfile\": \"<boolean>\"\n    }\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"metadataFile\": \"Base64 encoded metadata file content\",\n    \"metadataURL\": \"https://example.com/samlsso/meta\",\n    \"manualConfiguration\": {\n        \"issuer\": \"<string>\",\n        \"assertionConsumerUrls\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"serviceProviderQualifier\": \"<string>\",\n        \"defaultAssertionConsumerUrl\": \"<string>\",\n        \"idpEntityIdAlias\": \"<string>\",\n        \"singleSignOnProfile\": {\n            \"bindings\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n            \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n            \"assertion\": {\n                \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                \"audiences\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"recipients\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                \"encryption\": {\n                    \"enabled\": \"<boolean>\",\n                    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                }\n            }\n        },\n        \"attributeProfile\": {\n            \"enabled\": \"<boolean>\",\n            \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n        },\n        \"singleLogoutProfile\": {\n            \"enabled\": true,\n            \"logoutRequestUrl\": \"<string>\",\n            \"logoutResponseUrl\": \"<string>\",\n            \"logoutMethod\": \"<string>\",\n            \"idpInitiatedSingleLogout\": {\n                \"enabled\": \"<boolean>\",\n                \"returnToUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        },\n        \"requestValidation\": {\n            \"enableSignatureValidation\": true,\n            \"signatureValidationCertAlias\": \"<string>\"\n        },\n        \"responseSigning\": {\n            \"enabled\": true,\n            \"signingAlgorithm\": \"<string>\"\n        },\n        \"enableAssertionQueryProfile\": \"<boolean>\"\n    }\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Successful response.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"metadataFile\": \"Base64 encoded metadata file content\",\n    \"metadataURL\": \"https://example.com/samlsso/meta\",\n    \"manualConfiguration\": {\n        \"issuer\": \"<string>\",\n        \"assertionConsumerUrls\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"serviceProviderQualifier\": \"<string>\",\n        \"defaultAssertionConsumerUrl\": \"<string>\",\n        \"idpEntityIdAlias\": \"<string>\",\n        \"singleSignOnProfile\": {\n            \"bindings\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n            \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n            \"assertion\": {\n                \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                \"audiences\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"recipients\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                \"encryption\": {\n                    \"enabled\": \"<boolean>\",\n                    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                }\n            }\n        },\n        \"attributeProfile\": {\n            \"enabled\": \"<boolean>\",\n            \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n        },\n        \"singleLogoutProfile\": {\n            \"enabled\": true,\n            \"logoutRequestUrl\": \"<string>\",\n            \"logoutResponseUrl\": \"<string>\",\n            \"logoutMethod\": \"<string>\",\n            \"idpInitiatedSingleLogout\": {\n                \"enabled\": \"<boolean>\",\n                \"returnToUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        },\n        \"requestValidation\": {\n            \"enableSignatureValidation\": true,\n            \"signatureValidationCertAlias\": \"<string>\"\n        },\n        \"responseSigning\": {\n            \"enabled\": true,\n            \"signingAlgorithm\": \"<string>\"\n        },\n        \"enableAssertionQueryProfile\": \"<boolean>\"\n    }\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Location",
															"value": "<string>",
															"description": "Location of the newly created SAML Inbound configuration."
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"metadataFile\": \"Base64 encoded metadata file content\",\n    \"metadataURL\": \"https://example.com/samlsso/meta\",\n    \"manualConfiguration\": {\n        \"issuer\": \"<string>\",\n        \"assertionConsumerUrls\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"serviceProviderQualifier\": \"<string>\",\n        \"defaultAssertionConsumerUrl\": \"<string>\",\n        \"idpEntityIdAlias\": \"<string>\",\n        \"singleSignOnProfile\": {\n            \"bindings\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n            \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n            \"assertion\": {\n                \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                \"audiences\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"recipients\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                \"encryption\": {\n                    \"enabled\": \"<boolean>\",\n                    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                }\n            }\n        },\n        \"attributeProfile\": {\n            \"enabled\": \"<boolean>\",\n            \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n        },\n        \"singleLogoutProfile\": {\n            \"enabled\": true,\n            \"logoutRequestUrl\": \"<string>\",\n            \"logoutResponseUrl\": \"<string>\",\n            \"logoutMethod\": \"<string>\",\n            \"idpInitiatedSingleLogout\": {\n                \"enabled\": \"<boolean>\",\n                \"returnToUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        },\n        \"requestValidation\": {\n            \"enableSignatureValidation\": true,\n            \"signatureValidationCertAlias\": \"<string>\"\n        },\n        \"responseSigning\": {\n            \"enabled\": true,\n            \"signingAlgorithm\": \"<string>\"\n        },\n        \"enableAssertionQueryProfile\": \"<boolean>\"\n    }\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"metadataFile\": \"Base64 encoded metadata file content\",\n    \"metadataURL\": \"https://example.com/samlsso/meta\",\n    \"manualConfiguration\": {\n        \"issuer\": \"<string>\",\n        \"assertionConsumerUrls\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"serviceProviderQualifier\": \"<string>\",\n        \"defaultAssertionConsumerUrl\": \"<string>\",\n        \"idpEntityIdAlias\": \"<string>\",\n        \"singleSignOnProfile\": {\n            \"bindings\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n            \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n            \"assertion\": {\n                \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                \"audiences\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"recipients\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                \"encryption\": {\n                    \"enabled\": \"<boolean>\",\n                    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                }\n            }\n        },\n        \"attributeProfile\": {\n            \"enabled\": \"<boolean>\",\n            \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n        },\n        \"singleLogoutProfile\": {\n            \"enabled\": true,\n            \"logoutRequestUrl\": \"<string>\",\n            \"logoutResponseUrl\": \"<string>\",\n            \"logoutMethod\": \"<string>\",\n            \"idpInitiatedSingleLogout\": {\n                \"enabled\": \"<boolean>\",\n                \"returnToUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        },\n        \"requestValidation\": {\n            \"enableSignatureValidation\": true,\n            \"signatureValidationCertAlias\": \"<string>\"\n        },\n        \"responseSigning\": {\n            \"enabled\": true,\n            \"signingAlgorithm\": \"<string>\"\n        },\n        \"enableAssertionQueryProfile\": \"<boolean>\"\n    }\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Successful",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"metadataFile\": \"Base64 encoded metadata file content\",\n    \"metadataURL\": \"https://example.com/samlsso/meta\",\n    \"manualConfiguration\": {\n        \"issuer\": \"<string>\",\n        \"assertionConsumerUrls\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"serviceProviderQualifier\": \"<string>\",\n        \"defaultAssertionConsumerUrl\": \"<string>\",\n        \"idpEntityIdAlias\": \"<string>\",\n        \"singleSignOnProfile\": {\n            \"bindings\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n            \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n            \"assertion\": {\n                \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                \"audiences\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"recipients\": [\n                    \"https://app.example.com/saml\"\n                ],\n                \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                \"encryption\": {\n                    \"enabled\": \"<boolean>\",\n                    \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                    \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                }\n            }\n        },\n        \"attributeProfile\": {\n            \"enabled\": \"<boolean>\",\n            \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n        },\n        \"singleLogoutProfile\": {\n            \"enabled\": true,\n            \"logoutRequestUrl\": \"<string>\",\n            \"logoutResponseUrl\": \"<string>\",\n            \"logoutMethod\": \"<string>\",\n            \"idpInitiatedSingleLogout\": {\n                \"enabled\": \"<boolean>\",\n                \"returnToUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        },\n        \"requestValidation\": {\n            \"enableSignatureValidation\": true,\n            \"signatureValidationCertAlias\": \"<string>\"\n        },\n        \"responseSigning\": {\n            \"enabled\": true,\n            \"signingAlgorithm\": \"<string>\"\n        },\n        \"enableAssertionQueryProfile\": \"<boolean>\"\n    }\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete SAML2 authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"saml"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "0b712468-9c6c-45b4-b0fb-36ce80d09df9",
															"description": "ID of the application."
														}
													]
												},
												"description": "This API provides the capability to delete SAML2 authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Delete successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/saml",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"saml"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "oidc",
									"item": [
										{
											"name": "Retrieve OIDC authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"oidc"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application"
														}
													]
												},
												"description": "This API provides the capability to retrieve OIDC authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"grantTypes\": [\n  \"authorization_code\",\n  \"password\"\n ],\n \"clientId\": \"<string>\",\n \"clientSecret\": \"<string>\",\n \"state\": \"ACTIVE\",\n \"callbackURLs\": [\n  \"https://app.example.com/callback1\",\n  \"https://app.example.com/callback2\"\n ],\n \"allowedOrigins\": [\n  \"https://app.example.com/js\"\n ],\n \"publicClient\": false,\n \"pkce\": {\n  \"mandatory\": false,\n  \"supportPlainTransformAlgorithm\": true\n },\n \"accessToken\": {\n  \"type\": \"JWT\",\n  \"userAccessTokenExpiryInSeconds\": 3600,\n  \"applicationAccessTokenExpiryInSeconds\": 3600\n },\n \"refreshToken\": {\n  \"expiryInSeconds\": 86400,\n  \"renewRefreshToken\": true\n },\n \"idToken\": {\n  \"expiryInSeconds\": 3600,\n  \"audience\": [\n   \"http://idp.xyz.com\",\n   \"http://idp.abc.com\"\n  ],\n  \"encryption\": {\n   \"enabled\": false,\n   \"algorithm\": \"RSA-OAEP\",\n   \"method\": \"A128CBC+HS256\"\n  }\n },\n \"logout\": {\n  \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n  \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n },\n \"validateRequestObjectSignature\": false,\n \"scopeValidators\": [\n  \"XACMLScopeValidator\",\n  \"RoleBasedScopeValidator\"\n ]\n}"
												}
											]
										},
										{
											"name": "Update OIDC authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accessToken\": {\n        \"applicationAccessTokenExpiryInSeconds\": 3600,\n        \"type\": \"Default\",\n        \"userAccessTokenExpiryInSeconds\": 3600\n    },\n    \"allowedOrigins\": [],\n    \"callbackURLs\": [\n        \"http://localhost:8080/playground2/oauth2client\"\n    ],\n    \"grantTypes\": [\n        \"refresh_token\",\n        \"urn:ietf:params:oauth:grant-type:saml2-bearer\",\n        \"client_credentials\",\n        \"authorization_code\",\n        \"account_switch\",\n        \"implicit\",\n        \"password\"\n    ],\n    \"idToken\": {\n        \"audience\": [\n            \"\"\n        ],\n        \"encryption\": {\n            \"algorithm\": \"RSA-OAEP\",\n            \"enabled\": false,\n            \"method\": \"A128GCM\"\n        },\n        \"expiryInSeconds\": 3600\n    },\n    \"logout\": {\n        \"backChannelLogoutUrl\": \"\",\n        \"frontChannelLogoutUrl\": \"\"\n    },\n    \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n    },\n    \"publicClient\": false,\n    \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n    },\n    \"scopeValidators\": [],\n    \"validateRequestObjectSignature\": false,\n    \"clientId\": \"clientId1\",\n    \"clientSecret\": \"clientSecret1\"\n}"
												},
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"oidc"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application."
														}
													]
												},
												"description": "This API provides the capability to store OIDC authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"grantTypes\": [\n        \"authorization_code\",\n        \"password\"\n    ],\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"callbackURLs\": [\n        \"https://app.example.com/callback1\",\n        \"https://app.example.com/callback2\"\n    ],\n    \"allowedOrigins\": [\n        \"https://app.example.com/js\"\n    ],\n    \"publicClient\": false,\n    \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n    },\n    \"accessToken\": {\n        \"type\": \"JWT\",\n        \"userAccessTokenExpiryInSeconds\": 3600,\n        \"applicationAccessTokenExpiryInSeconds\": 3600\n    },\n    \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n    },\n    \"idToken\": {\n        \"expiryInSeconds\": 3600,\n        \"audience\": [\n            \"http://idp.xyz.com\",\n            \"http://idp.abc.com\"\n        ],\n        \"encryption\": {\n            \"enabled\": false,\n            \"algorithm\": \"RSA-OAEP\",\n            \"method\": \"A128CBC+HS256\"\n        }\n    },\n    \"logout\": {\n        \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n        \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n    },\n    \"validateRequestObjectSignature\": false,\n    \"scopeValidators\": [\n        \"XACMLScopeValidator\",\n        \"RoleBasedScopeValidator\"\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Successful",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"grantTypes\": [\n        \"authorization_code\",\n        \"password\"\n    ],\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"callbackURLs\": [\n        \"https://app.example.com/callback1\",\n        \"https://app.example.com/callback2\"\n    ],\n    \"allowedOrigins\": [\n        \"https://app.example.com/js\"\n    ],\n    \"publicClient\": false,\n    \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n    },\n    \"accessToken\": {\n        \"type\": \"JWT\",\n        \"userAccessTokenExpiryInSeconds\": 3600,\n        \"applicationAccessTokenExpiryInSeconds\": 3600\n    },\n    \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n    },\n    \"idToken\": {\n        \"expiryInSeconds\": 3600,\n        \"audience\": [\n            \"http://idp.xyz.com\",\n            \"http://idp.abc.com\"\n        ],\n        \"encryption\": {\n            \"enabled\": false,\n            \"algorithm\": \"RSA-OAEP\",\n            \"method\": \"A128CBC+HS256\"\n        }\n    },\n    \"logout\": {\n        \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n        \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n    },\n    \"validateRequestObjectSignature\": false,\n    \"scopeValidators\": [\n        \"XACMLScopeValidator\",\n        \"RoleBasedScopeValidator\"\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"grantTypes\": [\n        \"authorization_code\",\n        \"password\"\n    ],\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"callbackURLs\": [\n        \"https://app.example.com/callback1\",\n        \"https://app.example.com/callback2\"\n    ],\n    \"allowedOrigins\": [\n        \"https://app.example.com/js\"\n    ],\n    \"publicClient\": false,\n    \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n    },\n    \"accessToken\": {\n        \"type\": \"JWT\",\n        \"userAccessTokenExpiryInSeconds\": 3600,\n        \"applicationAccessTokenExpiryInSeconds\": 3600\n    },\n    \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n    },\n    \"idToken\": {\n        \"expiryInSeconds\": 3600,\n        \"audience\": [\n            \"http://idp.xyz.com\",\n            \"http://idp.abc.com\"\n        ],\n        \"encryption\": {\n            \"enabled\": false,\n            \"algorithm\": \"RSA-OAEP\",\n            \"method\": \"A128CBC+HS256\"\n        }\n    },\n    \"logout\": {\n        \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n        \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n    },\n    \"validateRequestObjectSignature\": false,\n    \"scopeValidators\": [\n        \"XACMLScopeValidator\",\n        \"RoleBasedScopeValidator\"\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"grantTypes\": [\n        \"authorization_code\",\n        \"password\"\n    ],\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"callbackURLs\": [\n        \"https://app.example.com/callback1\",\n        \"https://app.example.com/callback2\"\n    ],\n    \"allowedOrigins\": [\n        \"https://app.example.com/js\"\n    ],\n    \"publicClient\": false,\n    \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n    },\n    \"accessToken\": {\n        \"type\": \"JWT\",\n        \"userAccessTokenExpiryInSeconds\": 3600,\n        \"applicationAccessTokenExpiryInSeconds\": 3600\n    },\n    \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n    },\n    \"idToken\": {\n        \"expiryInSeconds\": 3600,\n        \"audience\": [\n            \"http://idp.xyz.com\",\n            \"http://idp.abc.com\"\n        ],\n        \"encryption\": {\n            \"enabled\": false,\n            \"algorithm\": \"RSA-OAEP\",\n            \"method\": \"A128CBC+HS256\"\n        }\n    },\n    \"logout\": {\n        \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n        \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n    },\n    \"validateRequestObjectSignature\": false,\n    \"scopeValidators\": [\n        \"XACMLScopeValidator\",\n        \"RoleBasedScopeValidator\"\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"grantTypes\": [\n        \"authorization_code\",\n        \"password\"\n    ],\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"callbackURLs\": [\n        \"https://app.example.com/callback1\",\n        \"https://app.example.com/callback2\"\n    ],\n    \"allowedOrigins\": [\n        \"https://app.example.com/js\"\n    ],\n    \"publicClient\": false,\n    \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n    },\n    \"accessToken\": {\n        \"type\": \"JWT\",\n        \"userAccessTokenExpiryInSeconds\": 3600,\n        \"applicationAccessTokenExpiryInSeconds\": 3600\n    },\n    \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n    },\n    \"idToken\": {\n        \"expiryInSeconds\": 3600,\n        \"audience\": [\n            \"http://idp.xyz.com\",\n            \"http://idp.abc.com\"\n        ],\n        \"encryption\": {\n            \"enabled\": false,\n            \"algorithm\": \"RSA-OAEP\",\n            \"method\": \"A128CBC+HS256\"\n        }\n    },\n    \"logout\": {\n        \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n        \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n    },\n    \"validateRequestObjectSignature\": false,\n    \"scopeValidators\": [\n        \"XACMLScopeValidator\",\n        \"RoleBasedScopeValidator\"\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"grantTypes\": [\n        \"authorization_code\",\n        \"password\"\n    ],\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"callbackURLs\": [\n        \"https://app.example.com/callback1\",\n        \"https://app.example.com/callback2\"\n    ],\n    \"allowedOrigins\": [\n        \"https://app.example.com/js\"\n    ],\n    \"publicClient\": false,\n    \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n    },\n    \"accessToken\": {\n        \"type\": \"JWT\",\n        \"userAccessTokenExpiryInSeconds\": 3600,\n        \"applicationAccessTokenExpiryInSeconds\": 3600\n    },\n    \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n    },\n    \"idToken\": {\n        \"expiryInSeconds\": 3600,\n        \"audience\": [\n            \"http://idp.xyz.com\",\n            \"http://idp.abc.com\"\n        ],\n        \"encryption\": {\n            \"enabled\": false,\n            \"algorithm\": \"RSA-OAEP\",\n            \"method\": \"A128CBC+HS256\"\n        }\n    },\n    \"logout\": {\n        \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n        \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n    },\n    \"validateRequestObjectSignature\": false,\n    \"scopeValidators\": [\n        \"XACMLScopeValidator\",\n        \"RoleBasedScopeValidator\"\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"grantTypes\": [\n        \"authorization_code\",\n        \"password\"\n    ],\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"callbackURLs\": [\n        \"https://app.example.com/callback1\",\n        \"https://app.example.com/callback2\"\n    ],\n    \"allowedOrigins\": [\n        \"https://app.example.com/js\"\n    ],\n    \"publicClient\": false,\n    \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n    },\n    \"accessToken\": {\n        \"type\": \"JWT\",\n        \"userAccessTokenExpiryInSeconds\": 3600,\n        \"applicationAccessTokenExpiryInSeconds\": 3600\n    },\n    \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n    },\n    \"idToken\": {\n        \"expiryInSeconds\": 3600,\n        \"audience\": [\n            \"http://idp.xyz.com\",\n            \"http://idp.abc.com\"\n        ],\n        \"encryption\": {\n            \"enabled\": false,\n            \"algorithm\": \"RSA-OAEP\",\n            \"method\": \"A128CBC+HS256\"\n        }\n    },\n    \"logout\": {\n        \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n        \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n    },\n    \"validateRequestObjectSignature\": false,\n    \"scopeValidators\": [\n        \"XACMLScopeValidator\",\n        \"RoleBasedScopeValidator\"\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Created",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"grantTypes\": [\n        \"authorization_code\",\n        \"password\"\n    ],\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"callbackURLs\": [\n        \"https://app.example.com/callback1\",\n        \"https://app.example.com/callback2\"\n    ],\n    \"allowedOrigins\": [\n        \"https://app.example.com/js\"\n    ],\n    \"publicClient\": false,\n    \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n    },\n    \"accessToken\": {\n        \"type\": \"JWT\",\n        \"userAccessTokenExpiryInSeconds\": 3600,\n        \"applicationAccessTokenExpiryInSeconds\": 3600\n    },\n    \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n    },\n    \"idToken\": {\n        \"expiryInSeconds\": 3600,\n        \"audience\": [\n            \"http://idp.xyz.com\",\n            \"http://idp.abc.com\"\n        ],\n        \"encryption\": {\n            \"enabled\": false,\n            \"algorithm\": \"RSA-OAEP\",\n            \"method\": \"A128CBC+HS256\"\n        }\n    },\n    \"logout\": {\n        \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n        \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n    },\n    \"validateRequestObjectSignature\": false,\n    \"scopeValidators\": [\n        \"XACMLScopeValidator\",\n        \"RoleBasedScopeValidator\"\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Location",
															"value": "<string>",
															"description": "Location of the newly created OIDC Authentication Configuration."
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete OIDC authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"oidc"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "0b712468-9c6c-45b4-b0fb-36ce80d09df9",
															"description": "ID of the application."
														}
													]
												},
												"description": "This API provides the capability to delete OIDC authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Delete Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										},
										{
											"name": "Regenerate the OAuth2/OIDC client secret of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/regenerate-secret",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"oidc",
														"regenerate-secret"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application"
														}
													]
												},
												"description": "This API regenerates the OAuth2/OIDC client secret.\n"
											},
											"response": [
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/regenerate-secret",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"regenerate-secret"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/regenerate-secret",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"regenerate-secret"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/regenerate-secret",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"regenerate-secret"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/regenerate-secret",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"regenerate-secret"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"grantTypes\": [\n  \"authorization_code\",\n  \"password\"\n ],\n \"clientId\": \"<string>\",\n \"clientSecret\": \"<string>\",\n \"state\": \"ACTIVE\",\n \"callbackURLs\": [\n  \"https://app.example.com/callback1\",\n  \"https://app.example.com/callback2\"\n ],\n \"allowedOrigins\": [\n  \"https://app.example.com/js\"\n ],\n \"publicClient\": false,\n \"pkce\": {\n  \"mandatory\": false,\n  \"supportPlainTransformAlgorithm\": true\n },\n \"accessToken\": {\n  \"type\": \"JWT\",\n  \"userAccessTokenExpiryInSeconds\": 3600,\n  \"applicationAccessTokenExpiryInSeconds\": 3600\n },\n \"refreshToken\": {\n  \"expiryInSeconds\": 86400,\n  \"renewRefreshToken\": true\n },\n \"idToken\": {\n  \"expiryInSeconds\": 3600,\n  \"audience\": [\n   \"http://idp.xyz.com\",\n   \"http://idp.abc.com\"\n  ],\n  \"encryption\": {\n   \"enabled\": false,\n   \"algorithm\": \"RSA-OAEP\",\n   \"method\": \"A128CBC+HS256\"\n  }\n },\n \"logout\": {\n  \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n  \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n },\n \"validateRequestObjectSignature\": false,\n \"scopeValidators\": [\n  \"XACMLScopeValidator\",\n  \"RoleBasedScopeValidator\"\n ]\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/regenerate-secret",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"regenerate-secret"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/regenerate-secret",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"regenerate-secret"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										},
										{
											"name": "Revoke the OAuth2/OIDC client of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/revoke",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"oidc",
														"revoke"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application"
														}
													]
												},
												"description": "This API revokes the OAuth2/OIDC client secret. To re-activate the client, the client secret needs to be regenerated.\n"
											},
											"response": [
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/revoke",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"revoke"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/revoke",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"revoke"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/revoke",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"revoke"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/revoke",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"revoke"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Application Revoked",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/revoke",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"revoke"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/oidc/revoke",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"oidc",
																"revoke"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "passive-sts",
									"item": [
										{
											"name": "Retrieve Passive STS authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"passive-sts"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application"
														}
													]
												},
												"description": "This API provides the capability to retrieve Passive STS authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"realm\": \"<string>\",\n \"replyTo\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										},
										{
											"name": "Update Passive STS authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"realm\": \"pickup2\",\n    \"replyTo\": \"https://localhost:9443/carbon2\"\n}"
												},
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"passive-sts"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application."
														}
													]
												},
												"description": "This API provides the capability to store passive STS authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"realm\": \"<string>\",\n    \"replyTo\": \"<string>\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Successful",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"realm\": \"<string>\",\n    \"replyTo\": \"<string>\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"realm\": \"<string>\",\n    \"replyTo\": \"<string>\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Successful response.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"realm\": \"<string>\",\n    \"replyTo\": \"<string>\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Location",
															"value": "<string>",
															"description": "Location of the newly created Passive STS Authentication Configuration."
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"realm\": \"<string>\",\n    \"replyTo\": \"<string>\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"realm\": \"<string>\",\n    \"replyTo\": \"<string>\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"realm\": \"<string>\",\n    \"replyTo\": \"<string>\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"realm\": \"<string>\",\n    \"replyTo\": \"<string>\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										},
										{
											"name": "Delete Passive STS authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"passive-sts"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application."
														}
													]
												},
												"description": "This API provides the capability to delete Passive STS authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Delete Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/passive-sts",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"passive-sts"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "ws-trust",
									"item": [
										{
											"name": "Retrieve WS Trust authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"ws-trust"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application"
														}
													]
												},
												"description": "This API provides the capability to retrieve Passive STS authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"audience\": \"https://wstrust.endpoint.com\",\n \"certificateAlias\": \"wso2carbon\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										},
										{
											"name": "Update WS Trust authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"audience\": \"https://wstrust.endpoint.com\",\n    \"certificateAlias\": \"wso2carbon\"\n}"
												},
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"ws-trust"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application."
														}
													]
												},
												"description": "This API provides the capability to store WS Trust authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"audience\": \"https://wstrust.endpoint.com\",\n    \"certificateAlias\": \"wso2carbon\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"audience\": \"https://wstrust.endpoint.com\",\n    \"certificateAlias\": \"wso2carbon\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"audience\": \"https://wstrust.endpoint.com\",\n    \"certificateAlias\": \"wso2carbon\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Successful",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"audience\": \"https://wstrust.endpoint.com\",\n    \"certificateAlias\": \"wso2carbon\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"audience\": \"https://wstrust.endpoint.com\",\n    \"certificateAlias\": \"wso2carbon\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"audience\": \"https://wstrust.endpoint.com\",\n    \"certificateAlias\": \"wso2carbon\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"audience\": \"https://wstrust.endpoint.com\",\n    \"certificateAlias\": \"wso2carbon\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Successful response.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"audience\": \"https://wstrust.endpoint.com\",\n    \"certificateAlias\": \"wso2carbon\"\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Location",
															"value": "<string>",
															"description": "Location of the newly created WS Trust Authentication Configuration."
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete WS Trust authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														"ws-trust"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
															"description": "ID of the application."
														}
													]
												},
												"description": "This API provides the capability to delete WS Trust authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Delete Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/ws-trust",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																"ws-trust"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{inbound Protocol Id}",
									"item": [
										{
											"name": "Retrieve custom Inbound authentication protocol parameters of application.\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														":inboundProtocolId"
													],
													"variable": [
														{
															"key": "tenant-domain",
															"value": "{{tenant-domain}}"
														},
														{
															"key": "server-url",
															"value": "{{server-url}}"
														},
														{
															"key": "applicationId",
															"value": "<string>",
															"description": "ID of the application"
														},
														{
															"key": "inboundProtocolId",
															"value": "<string>",
															"description": "Inbound Authentication Protocol ID"
														}
													]
												},
												"description": "This API provides the capability to retrieve custom inbound authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"name\": \"cas\",\n \"configName\": \"cas\",\n \"properties\": [\n  {\n   \"key\": \"app-identifier\",\n   \"value\": \"http://app.wso2.com/employeeApp\",\n   \"friendlyName\": \"Application Identifier\"\n  },\n  {\n   \"key\": \"app-identifier\",\n   \"value\": \"http://app.wso2.com/employeeApp\",\n   \"friendlyName\": \"Application Identifier\"\n  }\n ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										},
										{
											"name": "Update the custom inbound authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"configName\": \"<string>\",\n    \"properties\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"friendlyName\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"friendlyName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														":inboundProtocolId"
													],
													"variable": [
														{
															"key": "tenant-domain",
															"value": "{{tenant-domain}}"
														},
														{
															"key": "server-url",
															"value": "{{server-url}}"
														},
														{
															"key": "applicationId",
															"value": "<string>",
															"description": "ID of the application."
														},
														{
															"key": "inboundProtocolId",
															"value": "<string>",
															"description": "Inbound Authentication Protocol ID"
														}
													]
												},
												"description": "This API provides the capability to store custom inbound authentication protocol parameters of an application.\n"
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"cas\",\n    \"configName\": \"cas\",\n    \"properties\": [\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        },\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"cas\",\n    \"configName\": \"cas\",\n    \"properties\": [\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        },\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Successful response.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"cas\",\n    \"configName\": \"cas\",\n    \"properties\": [\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        },\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Location",
															"value": "<string>",
															"description": "Location of the newly created Custom Inbound authentication protocol Configuration."
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"cas\",\n    \"configName\": \"cas\",\n    \"properties\": [\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        },\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"cas\",\n    \"configName\": \"cas\",\n    \"properties\": [\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        },\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"cas\",\n    \"configName\": \"cas\",\n    \"properties\": [\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        },\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"cas\",\n    \"configName\": \"cas\",\n    \"properties\": [\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        },\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"cas\",\n    \"configName\": \"cas\",\n    \"properties\": [\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        },\n        {\n            \"key\": \"app-identifier\",\n            \"value\": \"http://app.wso2.com/employeeApp\",\n            \"friendlyName\": \"Application Identifier\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												}
											]
										},
										{
											"name": "Delete custom inbound authentication protocol parameters of application\n",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														":inboundProtocolId"
													],
													"variable": [
														{
															"key": "tenant-domain",
															"value": "{{tenant-domain}}"
														},
														{
															"key": "server-url",
															"value": "{{server-url}}"
														},
														{
															"key": "applicationId",
															"value": "<string>",
															"description": "ID of the application."
														},
														{
															"key": "inboundProtocolId",
															"value": "<string>",
															"description": "Inbound Authentication Protocol ID"
														}
													]
												},
												"description": "This API provides the capability to delete custom inbound authentication protocol of an application.\n"
											},
											"response": [
												{
													"name": "Server Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
												},
												{
													"name": "Delete Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/:inboundProtocolId",
															"protocol": "https",
															"host": [
																"{{server-url}}"
															],
															"path": [
																"t",
																"{{tenant-domain}}",
																"api",
																"server",
																"v1",
																"applications",
																":applicationId",
																"inbound-protocols",
																":inboundProtocolId"
															],
															"variable": [
																{
																	"key": "applicationId"
																},
																{
																	"key": "inboundProtocolId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Retrieve inbound protocol configurations of application\n",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "john@guardio.com",
													"type": "string"
												},
												{
													"key": "password",
													"value": "gu@rdioadmin#47",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId",
												"inbound-protocols",
												""
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "5385aca3-e55b-4054-9d52-654be66af51e",
													"type": "string",
													"description": "ID of the application."
												}
											]
										},
										"description": "This API provides the capability to retrieve authentication protocol configurations of an application.\n"
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														""
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														""
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"type\": \"samlsso\",\n  \"name\": \"SAML2 Inbound\",\n  \"self\": \"/t/carbon.super/api/server/v1/applications/29048810-1447-4ea0-a348-30d15ab65fa3/inbound-protocols/saml\"\n },\n {\n  \"type\": \"samlsso\",\n  \"name\": \"SAML2 Inbound\",\n  \"self\": \"/t/carbon.super/api/server/v1/applications/29048810-1447-4ea0-a348-30d15ab65fa3/inbound-protocols/saml\"\n }\n]"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														""
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														""
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/inbound-protocols/",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														":applicationId",
														"inbound-protocols",
														""
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve application by ID\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "gu@rdioadmin#47",
											"type": "string"
										},
										{
											"key": "username",
											"value": "john@guardio.com",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications",
										":applicationId"
									],
									"variable": [
										{
											"key": "applicationId",
											"value": "5385aca3-e55b-4054-9d52-654be66af51e",
											"type": "string",
											"description": "ID of the application."
										}
									]
								},
								"description": "This API provides the capability to retrieve the application information by ID.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"pickup\",\n \"id\": \"394b8adcce24c64a8a09a0d80abf8c337bd253de\",\n \"description\": \"This is the configuration for Pickup application.\",\n \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n \"accessUrl\": \"https://example.com/login\",\n \"claimConfiguration\": {\n  \"dialect\": \"LOCAL\",\n  \"claimMappings\": [\n   {\n    \"applicationClaim\": \"firstname\",\n    \"localClaim\": {\n     \"uri\": \"http://wso2.org/claims/username\",\n     \"id\": \"aHR0cDovL3dzbzIub3JnL2NsYWltcy91c2VybmFtZQ\",\n     \"displayName\": \"Username\"\n    }\n   },\n   {\n    \"applicationClaim\": \"firstname\",\n    \"localClaim\": {\n     \"uri\": \"http://wso2.org/claims/username\",\n     \"id\": \"aHR0cDovL3dzbzIub3JnL2NsYWltcy91c2VybmFtZQ\",\n     \"displayName\": \"Username\"\n    }\n   }\n  ],\n  \"requestedClaims\": [\n   {\n    \"claim\": {\n     \"uri\": \"http://wso2.org/claims/username\",\n     \"id\": \"aHR0cDovL3dzbzIub3JnL2NsYWltcy91c2VybmFtZQ\",\n     \"displayName\": \"Username\"\n    },\n    \"mandatory\": false\n   },\n   {\n    \"claim\": {\n     \"uri\": \"http://wso2.org/claims/username\",\n     \"id\": \"aHR0cDovL3dzbzIub3JnL2NsYWltcy91c2VybmFtZQ\",\n     \"displayName\": \"Username\"\n    },\n    \"mandatory\": false\n   }\n  ],\n  \"subject\": {\n   \"claim\": {\n    \"uri\": \"http://wso2.org/claims/username\",\n    \"id\": \"aHR0cDovL3dzbzIub3JnL2NsYWltcy91c2VybmFtZQ\",\n    \"displayName\": \"Username\"\n   },\n   \"includeUserDomain\": false,\n   \"includeTenantDomain\": false,\n   \"useMappedLocalSubject\": false\n  },\n  \"role\": {\n   \"mappings\": [\n    {\n     \"localRole\": \"admin\",\n     \"applicationRole\": \"Administrator\"\n    },\n    {\n     \"localRole\": \"admin\",\n     \"applicationRole\": \"Administrator\"\n    }\n   ],\n   \"includeUserDomain\": true,\n   \"claim\": {\n    \"uri\": \"http://wso2.org/claims/username\",\n    \"id\": \"aHR0cDovL3dzbzIub3JnL2NsYWltcy91c2VybmFtZQ\",\n    \"displayName\": \"Username\"\n   }\n  }\n },\n \"inboundProtocols\": [\n  {\n   \"type\": \"samlsso\",\n   \"name\": \"SAML2 Inbound\",\n   \"self\": \"/t/carbon.super/api/server/v1/applications/29048810-1447-4ea0-a348-30d15ab65fa3/inbound-protocols/saml\"\n  },\n  {\n   \"type\": \"samlsso\",\n   \"name\": \"SAML2 Inbound\",\n   \"self\": \"/t/carbon.super/api/server/v1/applications/29048810-1447-4ea0-a348-30d15ab65fa3/inbound-protocols/saml\"\n  }\n ],\n \"authenticationSequence\": {\n  \"type\": \"DEFAULT\",\n  \"steps\": [\n   {\n    \"id\": 1,\n    \"options\": [\n     {\n      \"idp\": \"LOCAL\",\n      \"authenticator\": \"basic\"\n     },\n     {\n      \"idp\": \"LOCAL\",\n      \"authenticator\": \"basic\"\n     }\n    ]\n   },\n   {\n    \"id\": 1,\n    \"options\": [\n     {\n      \"idp\": \"LOCAL\",\n      \"authenticator\": \"basic\"\n     },\n     {\n      \"idp\": \"LOCAL\",\n      \"authenticator\": \"basic\"\n     }\n    ]\n   }\n  ],\n  \"requestPathAuthenticators\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"script\": \"<string>\",\n  \"subjectStepId\": 1,\n  \"attributeStepId\": 1\n },\n \"advancedConfigurations\": {\n  \"saas\": false,\n  \"discoverableByEndUsers\": false,\n  \"certificate\": {\n   \"type\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"skipConsent\": false,\n  \"returnAuthenticatedIdpList\": false,\n  \"enableAuthorization\": true\n },\n \"provisioningConfigurations\": {\n  \"inboundProvisioning\": {\n   \"proxyMode\": false,\n   \"provisioningUserstoreDomain\": \"PRIMARY\"\n  },\n  \"outboundProvisioningIdps\": [\n   {\n    \"idp\": \"Google\",\n    \"connector\": \"googleapps\",\n    \"blocking\": false,\n    \"rules\": false,\n    \"jit\": false\n   },\n   {\n    \"idp\": \"Google\",\n    \"connector\": \"googleapps\",\n    \"blocking\": false,\n    \"rules\": false,\n    \"jit\": false\n   }\n  ]\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								}
							]
						},
						{
							"name": "Partially update application by ID\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "gu@rdioadmin#47",
											"type": "string"
										},
										{
											"key": "username",
											"value": "john@guardio.com",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authenticationSequence\": {\n        \"attributeStepId\": 1,\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"twitter\",\n                        \"authenticator\": \"TwitterAuthenticator\"\n                    },\n                    {\n                        \"idp\": \"Apple\",\n                        \"authenticator\": \"OpenIDConnectAuthenticator\"\n                    },\n                    {\n                        \"idp\": \"google\",\n                        \"authenticator\": \"GoogleOIDCAuthenticator\"\n                    },\n                    {\n                        \"idp\": \"facebook\",\n                        \"authenticator\": \"FacebookAuthenticator\"\n                    },\n                    {\n                        \"idp\": \"linkedin\",\n                        \"authenticator\": \"LinkedIn\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"BasicAuthenticator\"\n                    }\n                ]\n            }\n        ],\n        \"subjectStepId\": 1,\n        \"type\": \"USER_DEFINED\",\n        \"script\": \"\\\"var onLoginRequest = function(context) {\\\\n};\\\\n\\\"\"\n    }\n}"
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications",
										":applicationId"
									],
									"variable": [
										{
											"key": "applicationId",
											"value": "5385aca3-e55b-4054-9d52-654be66af51e",
											"description": "ID of the application."
										}
									]
								},
								"description": "This API provides the capability to partially update an application by ID.\n"
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Successfully Updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete application by ID\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications",
										":applicationId"
									],
									"variable": [
										{
											"key": "applicationId",
											"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
											"description": "ID of the application."
										}
									]
								},
								"description": "This API provides the capability to delete an application by ID.\n"
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Successfully Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								}
							]
						},
						{
							"name": "Export application as an XML file\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/export?exportSecrets=false",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications",
										":applicationId",
										"export"
									],
									"query": [
										{
											"key": "exportSecrets",
											"value": "false",
											"description": "Specifies whether to export secrets when exporting an application.\n"
										}
									],
									"variable": [
										{
											"key": "applicationId",
											"value": "a5da407d-67f3-4f2d-ba5d-520969f35768",
											"description": "ID of the application."
										}
									]
								},
								"description": "This API provides the capability to retrieve the application as an XML file.\n"
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/export?exportSecrets=<boolean>",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId",
												"export"
											],
											"query": [
												{
													"key": "exportSecrets",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/export?exportSecrets=<boolean>",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId",
												"export"
											],
											"query": [
												{
													"key": "exportSecrets",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/export?exportSecrets=<boolean>",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId",
												"export"
											],
											"query": [
												{
													"key": "exportSecrets",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/export?exportSecrets=<boolean>",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId",
												"export"
											],
											"query": [
												{
													"key": "exportSecrets",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/export?exportSecrets=<boolean>",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId",
												"export"
											],
											"query": [
												{
													"key": "exportSecrets",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/:applicationId/export?exportSecrets=<boolean>",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												":applicationId",
												"export"
											],
											"query": [
												{
													"key": "exportSecrets",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "applicationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/octet-stream"
										}
									],
									"cookie": [],
									"body": "schema type not provided"
								}
							]
						}
					]
				},
				{
					"name": "resident",
					"item": [
						{
							"name": "Get Resident application\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications",
										"resident"
									],
									"variable": [
										{
											"key": "tenant-domain",
											"value": "{{tenant-domain}}"
										},
										{
											"key": "server-url",
											"value": "{{server-url}}"
										}
									]
								},
								"description": "This API provides the capability to retrieve the resident application information.\n"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"provisioningConfigurations\": {\n  \"inboundProvisioning\": {\n   \"proxyMode\": false,\n   \"provisioningUserstoreDomain\": \"PRIMARY\"\n  },\n  \"outboundProvisioningIdps\": [\n   {\n    \"idp\": \"Google\",\n    \"connector\": \"googleapps\",\n    \"blocking\": false,\n    \"rules\": false,\n    \"jit\": false\n   },\n   {\n    \"idp\": \"Google\",\n    \"connector\": \"googleapps\",\n    \"blocking\": false,\n    \"rules\": false,\n    \"jit\": false\n   }\n  ]\n }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								}
							]
						},
						{
							"name": "Update Resident Application\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"inboundProvisioning\": {\n    \"proxyMode\": false,\n    \"provisioningUserstoreDomain\": \"PRIMARY\"\n  },\n  \"outboundProvisioningIdps\": [\n    {\n      \"idp\": \"Google\",\n      \"connector\": \"googleapps\",\n      \"blocking\": false,\n      \"rules\": false,\n      \"jit\": false\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications",
										"resident"
									],
									"variable": [
										{
											"key": "tenant-domain",
											"value": "{{tenant-domain}}"
										},
										{
											"key": "server-url",
											"value": "{{server-url}}"
										}
									]
								},
								"description": "This API provides the capability to update Resident Application Configuration.\n"
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inboundProvisioning\": {\n        \"proxyMode\": false,\n        \"provisioningUserstoreDomain\": \"PRIMARY\"\n    },\n    \"outboundProvisioningIdps\": [\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        },\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inboundProvisioning\": {\n        \"proxyMode\": false,\n        \"provisioningUserstoreDomain\": \"PRIMARY\"\n    },\n    \"outboundProvisioningIdps\": [\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        },\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inboundProvisioning\": {\n        \"proxyMode\": false,\n        \"provisioningUserstoreDomain\": \"PRIMARY\"\n    },\n    \"outboundProvisioningIdps\": [\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        },\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Location",
											"value": "<string>",
											"description": "Location of the provisioning configuration of the resident application."
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successful",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inboundProvisioning\": {\n        \"proxyMode\": false,\n        \"provisioningUserstoreDomain\": \"PRIMARY\"\n    },\n    \"outboundProvisioningIdps\": [\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        },\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inboundProvisioning\": {\n        \"proxyMode\": false,\n        \"provisioningUserstoreDomain\": \"PRIMARY\"\n    },\n    \"outboundProvisioningIdps\": [\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        },\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inboundProvisioning\": {\n        \"proxyMode\": false,\n        \"provisioningUserstoreDomain\": \"PRIMARY\"\n    },\n    \"outboundProvisioningIdps\": [\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        },\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inboundProvisioning\": {\n        \"proxyMode\": false,\n        \"provisioningUserstoreDomain\": \"PRIMARY\"\n    },\n    \"outboundProvisioningIdps\": [\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        },\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inboundProvisioning\": {\n        \"proxyMode\": false,\n        \"provisioningUserstoreDomain\": \"PRIMARY\"\n    },\n    \"outboundProvisioningIdps\": [\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        },\n        {\n            \"idp\": \"Google\",\n            \"connector\": \"googleapps\",\n            \"blocking\": false,\n            \"rules\": false,\n            \"jit\": false\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/resident",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"resident"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "meta",
					"item": [
						{
							"name": "inbound-protocols",
							"item": [
								{
									"name": "Retrieve the list of inbound authentication protocols available\n",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols?customOnly=false",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"inbound-protocols"
											],
											"query": [
												{
													"key": "customOnly",
													"value": "false",
													"description": "Send only the custom inbound protocols.\n"
												}
											],
											"variable": [
												{
													"key": "tenant-domain",
													"value": "{{tenant-domain}}"
												},
												{
													"key": "server-url",
													"value": "{{server-url}}"
												}
											]
										},
										"description": "This API provides the capability to retrieve the list of inbound authentication protocols available. If the query parameter 'customOnly' is set to true, only custom inbound protocols will be listed.\n"
									},
									"response": [
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols?customOnly=true",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols"
													],
													"query": [
														{
															"key": "customOnly",
															"value": "true"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols?customOnly=true",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols"
													],
													"query": [
														{
															"key": "customOnly",
															"value": "true"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols?customOnly=true",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols"
													],
													"query": [
														{
															"key": "customOnly",
															"value": "true"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols?customOnly=true",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols"
													],
													"query": [
														{
															"key": "customOnly",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"saml\",\n  \"displayName\": \"SAML2 Web SSO Configuration\"\n }\n]"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols?customOnly=true",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols"
													],
													"query": [
														{
															"key": "customOnly",
															"value": "true"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										}
									]
								},
								{
									"name": "Retrieve all the metadata related to the auth protocol SAML\n",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "gu@rdioadmin#47",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/saml",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"inbound-protocols",
												"saml"
											],
											"variable": [
												{
													"key": "tenant-domain",
													"value": "{{tenant-domain}}"
												},
												{
													"key": "server-url",
													"value": "{{server-url}}"
												}
											]
										},
										"description": "This API provides the capability to retrieve all the metadata related to the auth protocol SAML.\n"
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/saml",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"saml"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/saml",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"saml"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/saml",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"saml"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/saml",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"saml"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"defaultNameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n \"certificateAlias\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n },\n \"responseSigningAlgorithm\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n },\n \"responseDigestAlgorithm\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n },\n \"assertionEncryptionAlgorithm\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n },\n \"keyEncryptionAlgorithm\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n }\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/saml",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"saml"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										}
									]
								},
								{
									"name": "Retrieve all the metadata related to the authentication protocol OAuth / OIDC\n",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "gu@rdioadmin#47",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/oidc",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"inbound-protocols",
												"oidc"
											],
											"variable": [
												{
													"key": "tenant-domain",
													"value": "{{tenant-domain}}"
												},
												{
													"key": "server-url",
													"value": "{{server-url}}"
												}
											]
										},
										"description": "This API provides the capability to retrieve all the metadata related to the authentication\n protocol OAuth / OIDC.\n"
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/oidc",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"oidc"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/oidc",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"oidc"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"allowedGrantTypes\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n },\n \"defaultUserAccessTokenExpiryTime\": \"3600\",\n \"defaultApplicationAccessTokenExpiryTime\": \"3600\",\n \"defaultRefreshTokenExpiryTime\": \"86400\",\n \"defaultIdTokenExpiryTime\": \"3600\",\n \"idTokenEncryptionAlgorithm\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n },\n \"idTokenEncryptionMethod\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n },\n \"scopeValidators\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n },\n \"accessTokenType\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n }\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/oidc",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"oidc"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/oidc",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"oidc"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/oidc",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"oidc"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										}
									]
								},
								{
									"name": "Retrieve all the metadata related to the auth protocol WS Trust\n",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "gu@rdioadmin#47",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/ws-trust",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"inbound-protocols",
												"ws-trust"
											],
											"variable": [
												{
													"key": "tenant-domain",
													"value": "{{tenant-domain}}"
												},
												{
													"key": "server-url",
													"value": "{{server-url}}"
												}
											]
										},
										"description": "This API provides the capability to retrieve all the metadata related to the auth protocol WS_Trust.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/ws-trust",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"ws-trust"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"certificateAlias\": {\n  \"options\": [\n   \"Option 1\",\n   \"Option 2\"\n  ],\n  \"defaultValue\": \"Option 1\"\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/ws-trust",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"ws-trust"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/ws-trust",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"ws-trust"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/ws-trust",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"ws-trust"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/ws-trust",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														"ws-trust"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										}
									]
								},
								{
									"name": "Retrieve all the metadata related to the custom auth protocol identified by the inboundProtocolId\n",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/:inboundProtocolId",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"inbound-protocols",
												":inboundProtocolId"
											],
											"variable": [
												{
													"key": "tenant-domain",
													"value": "{{tenant-domain}}"
												},
												{
													"key": "server-url",
													"value": "{{server-url}}"
												},
												{
													"key": "inboundProtocolId",
													"value": "<string>",
													"description": "Inbound Authentication Protocol ID"
												}
											]
										},
										"description": "This API provides the capability to retrieve all the metadata related to the custom auth protocol identified by the inboundProtocolId.\n"
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/:inboundProtocolId",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														":inboundProtocolId"
													],
													"variable": [
														{
															"key": "inboundProtocolId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/:inboundProtocolId",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														":inboundProtocolId"
													],
													"variable": [
														{
															"key": "inboundProtocolId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/:inboundProtocolId",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														":inboundProtocolId"
													],
													"variable": [
														{
															"key": "inboundProtocolId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/:inboundProtocolId",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														":inboundProtocolId"
													],
													"variable": [
														{
															"key": "inboundProtocolId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/inbound-protocols/:inboundProtocolId",
													"protocol": "https",
													"host": [
														"{{server-url}}"
													],
													"path": [
														"t",
														"{{tenant-domain}}",
														"api",
														"server",
														"v1",
														"applications",
														"meta",
														"inbound-protocols",
														":inboundProtocolId"
													],
													"variable": [
														{
															"key": "inboundProtocolId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"displayName\": \"My Custom Protocol\",\n \"properties\": [\n  {\n   \"name\": \"encryptionAlgorithm\",\n   \"displayName\": \"Encryption Algorithm\",\n   \"type\": \"STRING\",\n   \"required\": true,\n   \"availableValues\": [\n    [\n     \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\",\n     \"http://www.w3.org/2001/04/xmlenc#rsa-1_5\"\n    ],\n    [\n     \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\",\n     \"http://www.w3.org/2001/04/xmlenc#rsa-1_5\"\n    ]\n   ],\n   \"defaultValue\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\",\n   \"validationRegex\": \"^[a-b][A-B]*\",\n   \"displayOrder\": 1,\n   \"isConfidential\": \"<boolean>\"\n  },\n  {\n   \"name\": \"encryptionAlgorithm\",\n   \"displayName\": \"Encryption Algorithm\",\n   \"type\": \"STRING\",\n   \"required\": true,\n   \"availableValues\": [\n    [\n     \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\",\n     \"http://www.w3.org/2001/04/xmlenc#rsa-1_5\"\n    ],\n    [\n     \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\",\n     \"http://www.w3.org/2001/04/xmlenc#rsa-1_5\"\n    ]\n   ],\n   \"defaultValue\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\",\n   \"validationRegex\": \"^[a-b][A-B]*\",\n   \"displayOrder\": 1,\n   \"isConfidential\": \"<boolean>\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve the sample adaptive authentication templates.\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "gu@rdioadmin#47",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/adaptive-auth-templates",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications",
										"meta",
										"adaptive-auth-templates"
									],
									"variable": [
										{
											"key": "tenant-domain",
											"value": "{{tenant-domain}}"
										},
										{
											"key": "server-url",
											"value": "{{server-url}}"
										}
									]
								},
								"description": "This API provides the capability to retrieve the sample adaptive authentication templates.\n"
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/adaptive-auth-templates",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"adaptive-auth-templates"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/adaptive-auth-templates",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"adaptive-auth-templates"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/adaptive-auth-templates",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"adaptive-auth-templates"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"templatesJSON\": \"Adaptive Auth Templates JSON\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/adaptive-auth-templates",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"adaptive-auth-templates"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications/meta/adaptive-auth-templates",
											"protocol": "https",
											"host": [
												"{{server-url}}"
											],
											"path": [
												"t",
												"{{tenant-domain}}",
												"api",
												"server",
												"v1",
												"applications",
												"meta",
												"adaptive-auth-templates"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List applications\n",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "gu@rdioadmin#47",
									"type": "string"
								},
								{
									"key": "username",
									"value": "john@guardio.com",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?limit=30&offset=0",
							"protocol": "https",
							"host": [
								"{{server-url}}"
							],
							"path": [
								"t",
								"{{tenant-domain}}",
								"api",
								"server",
								"v1",
								"applications"
							],
							"query": [
								{
									"key": "limit",
									"value": "30",
									"description": "Maximum number of records to return.\n"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Number of records to skip for pagination.\n"
								},
								{
									"key": "filter",
									"value": "name+sw+\"test\"",
									"description": "Condition to filter the retrieval of records. Supports 'sw', 'co', 'ew' and 'eq' operations. Currently supports only filtering based on the 'name' attribute.\n\n/applications?filter=name+eq+user_portal\n/applications?filter=name+co+prod\n",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "Define the order in which the retrieved records should be sorted.\n_This parameter is not supported yet._\n",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "name",
									"description": "Attribute by which the retrieved records should be sorted.\n_This parameter is not supported yet._\n",
									"disabled": true
								},
								{
									"key": "attributes",
									"value": "",
									"description": "Specifies the required parameters in the response\n_This parameter is not supported yet_\n",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "tenant-domain",
									"value": "{{tenant-domain}}"
								},
								{
									"key": "server-url",
									"value": "{{server-url}}"
								}
							]
						},
						"description": "This API provides the capability to retrieve the list of applications.\n"
					},
					"response": [
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?limit=30&offset=<integer>&filter=<string>&sortOrder=<string>&sortBy=<string>&attributes=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "limit",
											"value": "30"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "sortOrder",
											"value": "<string>"
										},
										{
											"key": "sortBy",
											"value": "<string>"
										},
										{
											"key": "attributes",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?limit=30&offset=<integer>&filter=<string>&sortOrder=<string>&sortBy=<string>&attributes=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "limit",
											"value": "30"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "sortOrder",
											"value": "<string>"
										},
										{
											"key": "sortBy",
											"value": "<string>"
										},
										{
											"key": "attributes",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "Not Implemented",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?limit=30&offset=<integer>&filter=<string>&sortOrder=<string>&sortBy=<string>&attributes=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "limit",
											"value": "30"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "sortOrder",
											"value": "<string>"
										},
										{
											"key": "sortBy",
											"value": "<string>"
										},
										{
											"key": "attributes",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?limit=30&offset=<integer>&filter=<string>&sortOrder=<string>&sortBy=<string>&attributes=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "limit",
											"value": "30"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "sortOrder",
											"value": "<string>"
										},
										{
											"key": "sortBy",
											"value": "<string>"
										},
										{
											"key": "attributes",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"totalResults\": 1,\n \"startIndex\": 1,\n \"count\": 10,\n \"applications\": [\n  {\n   \"id\": \"85e3f4b8-0d22-4181-b1e3-1651f71b88bd\",\n   \"name\": \"user-portal\",\n   \"description\": \"Application representing user portal\",\n   \"image\": \"https://example.com/logo/my-logo.png\",\n   \"accessUrl\": \"https://example.com/app/login\",\n   \"self\": \"/t/wso2.com/api/server/v1/applications/85e3f4b8-0d22-4181-b1e3-1651f71b88bd\"\n  },\n  {\n   \"id\": \"85e3f4b8-0d22-4181-b1e3-1651f71b88bd\",\n   \"name\": \"user-portal\",\n   \"description\": \"Application representing user portal\",\n   \"image\": \"https://example.com/logo/my-logo.png\",\n   \"accessUrl\": \"https://example.com/app/login\",\n   \"self\": \"/t/wso2.com/api/server/v1/applications/85e3f4b8-0d22-4181-b1e3-1651f71b88bd\"\n  }\n ],\n \"links\": [\n  {\n   \"href\": \"applications?offset=10&limit=10\",\n   \"rel\": \"next\"\n  },\n  {\n   \"href\": \"applications?offset=10&limit=10\",\n   \"rel\": \"next\"\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?limit=30&offset=<integer>&filter=<string>&sortOrder=<string>&sortBy=<string>&attributes=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "limit",
											"value": "30"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "sortOrder",
											"value": "<string>"
										},
										{
											"key": "sortBy",
											"value": "<string>"
										},
										{
											"key": "attributes",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?limit=30&offset=<integer>&filter=<string>&sortOrder=<string>&sortBy=<string>&attributes=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "limit",
											"value": "30"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "sortOrder",
											"value": "<string>"
										},
										{
											"key": "sortBy",
											"value": "<string>"
										},
										{
											"key": "attributes",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?limit=30&offset=<integer>&filter=<string>&sortOrder=<string>&sortBy=<string>&attributes=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "limit",
											"value": "30"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "sortOrder",
											"value": "<string>"
										},
										{
											"key": "sortBy",
											"value": "<string>"
										},
										{
											"key": "attributes",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						}
					]
				},
				{
					"name": "Add application\n",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "john@guardio.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "gu@rdioadmin#47",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"pickup\",\n  \"description\": \"This is the configuration for Pickup application.\",\n  \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n  \"accessUrl\": \"https://example.com/login\",\n  \"claimConfiguration\": {\n    \"dialect\": \"LOCAL\",\n    \"claimMappings\": [],\n    \"requestedClaims\": [],\n    \"subject\": {\n      \"claim\": {\n        \"uri\": \"http://wso2.org/claims/username\"\n      },\n      \"includeUserDomain\": false,\n      \"includeTenantDomain\": false,\n      \"useMappedLocalSubject\": false\n    },\n    \"role\": {\n      \"mappings\": [\n        {\n          \"localRole\": \"admin\",\n          \"applicationRole\": \"Administrator\"\n        }\n      ],\n      \"includeUserDomain\": true,\n      \"claim\": {\n        \"uri\": \"http://wso2.org/claims/username\"\n      }\n    }\n  },\n  \"inboundProtocolConfiguration\": {\n    \"oidc\": {\n      \"accessToken\": {\n        \"applicationAccessTokenExpiryInSeconds\": 3600,\n        \"type\": \"Default\",\n        \"userAccessTokenExpiryInSeconds\": 3600\n      },\n      \"allowedOrigins\": [],\n      \"callbackURLs\": [\n        \"http://localhost:8080/playground2/oauth2client\"\n      ],\n      \"grantTypes\": [\n        \"refresh_token\",\n        \"urn:ietf:params:oauth:grant-type:saml2-bearer\",\n        \"client_credentials\",\n        \"authorization_code\",\n        \"account_switch\",\n        \"implicit\",\n        \"password\"\n      ],\n      \"idToken\": {\n        \"audience\": [\n          \"\"\n        ],\n        \"encryption\": {\n          \"algorithm\": \"RSA-OAEP\",\n          \"enabled\": false,\n          \"method\": \"A128GCM\"\n        },\n        \"expiryInSeconds\": 3600\n      },\n      \"logout\": {\n        \"backChannelLogoutUrl\": \"\",\n        \"frontChannelLogoutUrl\": \"\"\n      },\n      \"pkce\": {\n        \"mandatory\": false,\n        \"supportPlainTransformAlgorithm\": true\n      },\n      \"publicClient\": false,\n      \"refreshToken\": {\n        \"expiryInSeconds\": 86400,\n        \"renewRefreshToken\": true\n      },\n      \"scopeValidators\": [],\n      \"validateRequestObjectSignature\": false,\n      \"clientId\": \"clientId12\",\n      \"clientSecret\": \"clientSecret11\"\n    }\n  },\n  \"authenticationSequence\": {\n    \"type\": \"DEFAULT\",\n    \"steps\": [\n      {\n        \"id\": 1,\n        \"options\": [\n          {\n            \"idp\": \"LOCAL\",\n            \"authenticator\": \"BasicAuthenticator\"\n          }\n        ]\n      }\n    ],\n    \"requestPathAuthenticators\": [],\n    \"subjectStepId\": 1,\n    \"attributeStepId\": 1\n  },\n  \"advancedConfigurations\": {\n    \"saas\": false,\n    \"discoverableByEndUsers\": false,\n    \"certificate\": {\n      \"type\": \"JWKS\",\n      \"value\": \"https://localhost/carbon1\"\n    },\n    \"skipConsent\": false,\n    \"returnAuthenticatedIdpList\": false,\n    \"enableAuthorization\": false\n  },\n  \"provisioningConfigurations\": {\n    \"inboundProvisioning\": {\n      \"provisioningUserstoreDomain\": \"PRIMARY\"\n    },\n    \"outboundProvisioningIdps\": []\n  }\n}"
						},
						"url": {
							"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications",
							"protocol": "https",
							"host": [
								"{{server-url}}"
							],
							"path": [
								"t",
								"{{tenant-domain}}",
								"api",
								"server",
								"v1",
								"applications"
							],
							"query": [
								{
									"key": "template",
									"value": "",
									"description": "Pre-defined template to use when creating the application.\n",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "tenant-domain",
									"value": "{{tenant-domain}}"
								},
								{
									"key": "server-url",
									"value": "{{server-url}}"
								}
							]
						},
						"description": "This API provides the capability to store the application information provided by users.\n"
					},
					"response": [
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"inboundProtocolConfiguration\": {\n        \"saml\": {\n            \"metadataFile\": \"Base64 encoded metadata file content\",\n            \"metadataURL\": \"https://example.com/samlsso/meta\",\n            \"manualConfiguration\": {\n                \"issuer\": \"<string>\",\n                \"assertionConsumerUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"serviceProviderQualifier\": \"<string>\",\n                \"defaultAssertionConsumerUrl\": \"<string>\",\n                \"idpEntityIdAlias\": \"<string>\",\n                \"singleSignOnProfile\": {\n                    \"bindings\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n                    \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n                    \"assertion\": {\n                        \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                        \"audiences\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"recipients\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                        \"encryption\": {\n                            \"enabled\": \"<boolean>\",\n                            \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                            \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                        }\n                    }\n                },\n                \"attributeProfile\": {\n                    \"enabled\": \"<boolean>\",\n                    \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n                },\n                \"singleLogoutProfile\": {\n                    \"enabled\": true,\n                    \"logoutRequestUrl\": \"<string>\",\n                    \"logoutResponseUrl\": \"<string>\",\n                    \"logoutMethod\": \"<string>\",\n                    \"idpInitiatedSingleLogout\": {\n                        \"enabled\": \"<boolean>\",\n                        \"returnToUrls\": [\n                            \"<string>\",\n                            \"<string>\"\n                        ]\n                    }\n                },\n                \"requestValidation\": {\n                    \"enableSignatureValidation\": true,\n                    \"signatureValidationCertAlias\": \"<string>\"\n                },\n                \"responseSigning\": {\n                    \"enabled\": true,\n                    \"signingAlgorithm\": \"<string>\"\n                },\n                \"enableAssertionQueryProfile\": \"<boolean>\"\n            }\n        },\n        \"oidc\": {\n            \"grantTypes\": [\n                \"authorization_code\",\n                \"password\"\n            ],\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"callbackURLs\": [\n                \"https://app.example.com/callback1\",\n                \"https://app.example.com/callback2\"\n            ],\n            \"allowedOrigins\": [\n                \"https://app.example.com/js\"\n            ],\n            \"publicClient\": false,\n            \"pkce\": {\n                \"mandatory\": false,\n                \"supportPlainTransformAlgorithm\": true\n            },\n            \"accessToken\": {\n                \"type\": \"JWT\",\n                \"userAccessTokenExpiryInSeconds\": 3600,\n                \"applicationAccessTokenExpiryInSeconds\": 3600\n            },\n            \"refreshToken\": {\n                \"expiryInSeconds\": 86400,\n                \"renewRefreshToken\": true\n            },\n            \"idToken\": {\n                \"expiryInSeconds\": 3600,\n                \"audience\": [\n                    \"http://idp.xyz.com\",\n                    \"http://idp.abc.com\"\n                ],\n                \"encryption\": {\n                    \"enabled\": false,\n                    \"algorithm\": \"RSA-OAEP\",\n                    \"method\": \"A128CBC+HS256\"\n                }\n            },\n            \"logout\": {\n                \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n                \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n            },\n            \"validateRequestObjectSignature\": false,\n            \"scopeValidators\": [\n                \"XACMLScopeValidator\",\n                \"RoleBasedScopeValidator\"\n            ]\n        },\n        \"passiveSts\": {\n            \"realm\": \"<string>\",\n            \"replyTo\": \"<string>\"\n        },\n        \"wsTrust\": {\n            \"audience\": \"https://wstrust.endpoint.com\",\n            \"certificateAlias\": \"wso2carbon\"\n        },\n        \"custom\": [\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?template=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "template",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"inboundProtocolConfiguration\": {\n        \"saml\": {\n            \"metadataFile\": \"Base64 encoded metadata file content\",\n            \"metadataURL\": \"https://example.com/samlsso/meta\",\n            \"manualConfiguration\": {\n                \"issuer\": \"<string>\",\n                \"assertionConsumerUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"serviceProviderQualifier\": \"<string>\",\n                \"defaultAssertionConsumerUrl\": \"<string>\",\n                \"idpEntityIdAlias\": \"<string>\",\n                \"singleSignOnProfile\": {\n                    \"bindings\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n                    \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n                    \"assertion\": {\n                        \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                        \"audiences\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"recipients\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                        \"encryption\": {\n                            \"enabled\": \"<boolean>\",\n                            \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                            \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                        }\n                    }\n                },\n                \"attributeProfile\": {\n                    \"enabled\": \"<boolean>\",\n                    \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n                },\n                \"singleLogoutProfile\": {\n                    \"enabled\": true,\n                    \"logoutRequestUrl\": \"<string>\",\n                    \"logoutResponseUrl\": \"<string>\",\n                    \"logoutMethod\": \"<string>\",\n                    \"idpInitiatedSingleLogout\": {\n                        \"enabled\": \"<boolean>\",\n                        \"returnToUrls\": [\n                            \"<string>\",\n                            \"<string>\"\n                        ]\n                    }\n                },\n                \"requestValidation\": {\n                    \"enableSignatureValidation\": true,\n                    \"signatureValidationCertAlias\": \"<string>\"\n                },\n                \"responseSigning\": {\n                    \"enabled\": true,\n                    \"signingAlgorithm\": \"<string>\"\n                },\n                \"enableAssertionQueryProfile\": \"<boolean>\"\n            }\n        },\n        \"oidc\": {\n            \"grantTypes\": [\n                \"authorization_code\",\n                \"password\"\n            ],\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"callbackURLs\": [\n                \"https://app.example.com/callback1\",\n                \"https://app.example.com/callback2\"\n            ],\n            \"allowedOrigins\": [\n                \"https://app.example.com/js\"\n            ],\n            \"publicClient\": false,\n            \"pkce\": {\n                \"mandatory\": false,\n                \"supportPlainTransformAlgorithm\": true\n            },\n            \"accessToken\": {\n                \"type\": \"JWT\",\n                \"userAccessTokenExpiryInSeconds\": 3600,\n                \"applicationAccessTokenExpiryInSeconds\": 3600\n            },\n            \"refreshToken\": {\n                \"expiryInSeconds\": 86400,\n                \"renewRefreshToken\": true\n            },\n            \"idToken\": {\n                \"expiryInSeconds\": 3600,\n                \"audience\": [\n                    \"http://idp.xyz.com\",\n                    \"http://idp.abc.com\"\n                ],\n                \"encryption\": {\n                    \"enabled\": false,\n                    \"algorithm\": \"RSA-OAEP\",\n                    \"method\": \"A128CBC+HS256\"\n                }\n            },\n            \"logout\": {\n                \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n                \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n            },\n            \"validateRequestObjectSignature\": false,\n            \"scopeValidators\": [\n                \"XACMLScopeValidator\",\n                \"RoleBasedScopeValidator\"\n            ]\n        },\n        \"passiveSts\": {\n            \"realm\": \"<string>\",\n            \"replyTo\": \"<string>\"\n        },\n        \"wsTrust\": {\n            \"audience\": \"https://wstrust.endpoint.com\",\n            \"certificateAlias\": \"wso2carbon\"\n        },\n        \"custom\": [\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?template=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "template",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"inboundProtocolConfiguration\": {\n        \"saml\": {\n            \"metadataFile\": \"Base64 encoded metadata file content\",\n            \"metadataURL\": \"https://example.com/samlsso/meta\",\n            \"manualConfiguration\": {\n                \"issuer\": \"<string>\",\n                \"assertionConsumerUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"serviceProviderQualifier\": \"<string>\",\n                \"defaultAssertionConsumerUrl\": \"<string>\",\n                \"idpEntityIdAlias\": \"<string>\",\n                \"singleSignOnProfile\": {\n                    \"bindings\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n                    \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n                    \"assertion\": {\n                        \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                        \"audiences\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"recipients\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                        \"encryption\": {\n                            \"enabled\": \"<boolean>\",\n                            \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                            \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                        }\n                    }\n                },\n                \"attributeProfile\": {\n                    \"enabled\": \"<boolean>\",\n                    \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n                },\n                \"singleLogoutProfile\": {\n                    \"enabled\": true,\n                    \"logoutRequestUrl\": \"<string>\",\n                    \"logoutResponseUrl\": \"<string>\",\n                    \"logoutMethod\": \"<string>\",\n                    \"idpInitiatedSingleLogout\": {\n                        \"enabled\": \"<boolean>\",\n                        \"returnToUrls\": [\n                            \"<string>\",\n                            \"<string>\"\n                        ]\n                    }\n                },\n                \"requestValidation\": {\n                    \"enableSignatureValidation\": true,\n                    \"signatureValidationCertAlias\": \"<string>\"\n                },\n                \"responseSigning\": {\n                    \"enabled\": true,\n                    \"signingAlgorithm\": \"<string>\"\n                },\n                \"enableAssertionQueryProfile\": \"<boolean>\"\n            }\n        },\n        \"oidc\": {\n            \"grantTypes\": [\n                \"authorization_code\",\n                \"password\"\n            ],\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"callbackURLs\": [\n                \"https://app.example.com/callback1\",\n                \"https://app.example.com/callback2\"\n            ],\n            \"allowedOrigins\": [\n                \"https://app.example.com/js\"\n            ],\n            \"publicClient\": false,\n            \"pkce\": {\n                \"mandatory\": false,\n                \"supportPlainTransformAlgorithm\": true\n            },\n            \"accessToken\": {\n                \"type\": \"JWT\",\n                \"userAccessTokenExpiryInSeconds\": 3600,\n                \"applicationAccessTokenExpiryInSeconds\": 3600\n            },\n            \"refreshToken\": {\n                \"expiryInSeconds\": 86400,\n                \"renewRefreshToken\": true\n            },\n            \"idToken\": {\n                \"expiryInSeconds\": 3600,\n                \"audience\": [\n                    \"http://idp.xyz.com\",\n                    \"http://idp.abc.com\"\n                ],\n                \"encryption\": {\n                    \"enabled\": false,\n                    \"algorithm\": \"RSA-OAEP\",\n                    \"method\": \"A128CBC+HS256\"\n                }\n            },\n            \"logout\": {\n                \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n                \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n            },\n            \"validateRequestObjectSignature\": false,\n            \"scopeValidators\": [\n                \"XACMLScopeValidator\",\n                \"RoleBasedScopeValidator\"\n            ]\n        },\n        \"passiveSts\": {\n            \"realm\": \"<string>\",\n            \"replyTo\": \"<string>\"\n        },\n        \"wsTrust\": {\n            \"audience\": \"https://wstrust.endpoint.com\",\n            \"certificateAlias\": \"wso2carbon\"\n        },\n        \"custom\": [\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?template=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "template",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"inboundProtocolConfiguration\": {\n        \"saml\": {\n            \"metadataFile\": \"Base64 encoded metadata file content\",\n            \"metadataURL\": \"https://example.com/samlsso/meta\",\n            \"manualConfiguration\": {\n                \"issuer\": \"<string>\",\n                \"assertionConsumerUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"serviceProviderQualifier\": \"<string>\",\n                \"defaultAssertionConsumerUrl\": \"<string>\",\n                \"idpEntityIdAlias\": \"<string>\",\n                \"singleSignOnProfile\": {\n                    \"bindings\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n                    \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n                    \"assertion\": {\n                        \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                        \"audiences\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"recipients\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                        \"encryption\": {\n                            \"enabled\": \"<boolean>\",\n                            \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                            \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                        }\n                    }\n                },\n                \"attributeProfile\": {\n                    \"enabled\": \"<boolean>\",\n                    \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n                },\n                \"singleLogoutProfile\": {\n                    \"enabled\": true,\n                    \"logoutRequestUrl\": \"<string>\",\n                    \"logoutResponseUrl\": \"<string>\",\n                    \"logoutMethod\": \"<string>\",\n                    \"idpInitiatedSingleLogout\": {\n                        \"enabled\": \"<boolean>\",\n                        \"returnToUrls\": [\n                            \"<string>\",\n                            \"<string>\"\n                        ]\n                    }\n                },\n                \"requestValidation\": {\n                    \"enableSignatureValidation\": true,\n                    \"signatureValidationCertAlias\": \"<string>\"\n                },\n                \"responseSigning\": {\n                    \"enabled\": true,\n                    \"signingAlgorithm\": \"<string>\"\n                },\n                \"enableAssertionQueryProfile\": \"<boolean>\"\n            }\n        },\n        \"oidc\": {\n            \"grantTypes\": [\n                \"authorization_code\",\n                \"password\"\n            ],\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"callbackURLs\": [\n                \"https://app.example.com/callback1\",\n                \"https://app.example.com/callback2\"\n            ],\n            \"allowedOrigins\": [\n                \"https://app.example.com/js\"\n            ],\n            \"publicClient\": false,\n            \"pkce\": {\n                \"mandatory\": false,\n                \"supportPlainTransformAlgorithm\": true\n            },\n            \"accessToken\": {\n                \"type\": \"JWT\",\n                \"userAccessTokenExpiryInSeconds\": 3600,\n                \"applicationAccessTokenExpiryInSeconds\": 3600\n            },\n            \"refreshToken\": {\n                \"expiryInSeconds\": 86400,\n                \"renewRefreshToken\": true\n            },\n            \"idToken\": {\n                \"expiryInSeconds\": 3600,\n                \"audience\": [\n                    \"http://idp.xyz.com\",\n                    \"http://idp.abc.com\"\n                ],\n                \"encryption\": {\n                    \"enabled\": false,\n                    \"algorithm\": \"RSA-OAEP\",\n                    \"method\": \"A128CBC+HS256\"\n                }\n            },\n            \"logout\": {\n                \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n                \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n            },\n            \"validateRequestObjectSignature\": false,\n            \"scopeValidators\": [\n                \"XACMLScopeValidator\",\n                \"RoleBasedScopeValidator\"\n            ]\n        },\n        \"passiveSts\": {\n            \"realm\": \"<string>\",\n            \"replyTo\": \"<string>\"\n        },\n        \"wsTrust\": {\n            \"audience\": \"https://wstrust.endpoint.com\",\n            \"certificateAlias\": \"wso2carbon\"\n        },\n        \"custom\": [\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?template=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "template",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "Not Implemented",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"inboundProtocolConfiguration\": {\n        \"saml\": {\n            \"metadataFile\": \"Base64 encoded metadata file content\",\n            \"metadataURL\": \"https://example.com/samlsso/meta\",\n            \"manualConfiguration\": {\n                \"issuer\": \"<string>\",\n                \"assertionConsumerUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"serviceProviderQualifier\": \"<string>\",\n                \"defaultAssertionConsumerUrl\": \"<string>\",\n                \"idpEntityIdAlias\": \"<string>\",\n                \"singleSignOnProfile\": {\n                    \"bindings\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n                    \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n                    \"assertion\": {\n                        \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                        \"audiences\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"recipients\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                        \"encryption\": {\n                            \"enabled\": \"<boolean>\",\n                            \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                            \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                        }\n                    }\n                },\n                \"attributeProfile\": {\n                    \"enabled\": \"<boolean>\",\n                    \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n                },\n                \"singleLogoutProfile\": {\n                    \"enabled\": true,\n                    \"logoutRequestUrl\": \"<string>\",\n                    \"logoutResponseUrl\": \"<string>\",\n                    \"logoutMethod\": \"<string>\",\n                    \"idpInitiatedSingleLogout\": {\n                        \"enabled\": \"<boolean>\",\n                        \"returnToUrls\": [\n                            \"<string>\",\n                            \"<string>\"\n                        ]\n                    }\n                },\n                \"requestValidation\": {\n                    \"enableSignatureValidation\": true,\n                    \"signatureValidationCertAlias\": \"<string>\"\n                },\n                \"responseSigning\": {\n                    \"enabled\": true,\n                    \"signingAlgorithm\": \"<string>\"\n                },\n                \"enableAssertionQueryProfile\": \"<boolean>\"\n            }\n        },\n        \"oidc\": {\n            \"grantTypes\": [\n                \"authorization_code\",\n                \"password\"\n            ],\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"callbackURLs\": [\n                \"https://app.example.com/callback1\",\n                \"https://app.example.com/callback2\"\n            ],\n            \"allowedOrigins\": [\n                \"https://app.example.com/js\"\n            ],\n            \"publicClient\": false,\n            \"pkce\": {\n                \"mandatory\": false,\n                \"supportPlainTransformAlgorithm\": true\n            },\n            \"accessToken\": {\n                \"type\": \"JWT\",\n                \"userAccessTokenExpiryInSeconds\": 3600,\n                \"applicationAccessTokenExpiryInSeconds\": 3600\n            },\n            \"refreshToken\": {\n                \"expiryInSeconds\": 86400,\n                \"renewRefreshToken\": true\n            },\n            \"idToken\": {\n                \"expiryInSeconds\": 3600,\n                \"audience\": [\n                    \"http://idp.xyz.com\",\n                    \"http://idp.abc.com\"\n                ],\n                \"encryption\": {\n                    \"enabled\": false,\n                    \"algorithm\": \"RSA-OAEP\",\n                    \"method\": \"A128CBC+HS256\"\n                }\n            },\n            \"logout\": {\n                \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n                \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n            },\n            \"validateRequestObjectSignature\": false,\n            \"scopeValidators\": [\n                \"XACMLScopeValidator\",\n                \"RoleBasedScopeValidator\"\n            ]\n        },\n        \"passiveSts\": {\n            \"realm\": \"<string>\",\n            \"replyTo\": \"<string>\"\n        },\n        \"wsTrust\": {\n            \"audience\": \"https://wstrust.endpoint.com\",\n            \"certificateAlias\": \"wso2carbon\"\n        },\n        \"custom\": [\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?template=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "template",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						},
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"inboundProtocolConfiguration\": {\n        \"saml\": {\n            \"metadataFile\": \"Base64 encoded metadata file content\",\n            \"metadataURL\": \"https://example.com/samlsso/meta\",\n            \"manualConfiguration\": {\n                \"issuer\": \"<string>\",\n                \"assertionConsumerUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"serviceProviderQualifier\": \"<string>\",\n                \"defaultAssertionConsumerUrl\": \"<string>\",\n                \"idpEntityIdAlias\": \"<string>\",\n                \"singleSignOnProfile\": {\n                    \"bindings\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n                    \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n                    \"assertion\": {\n                        \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                        \"audiences\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"recipients\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                        \"encryption\": {\n                            \"enabled\": \"<boolean>\",\n                            \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                            \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                        }\n                    }\n                },\n                \"attributeProfile\": {\n                    \"enabled\": \"<boolean>\",\n                    \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n                },\n                \"singleLogoutProfile\": {\n                    \"enabled\": true,\n                    \"logoutRequestUrl\": \"<string>\",\n                    \"logoutResponseUrl\": \"<string>\",\n                    \"logoutMethod\": \"<string>\",\n                    \"idpInitiatedSingleLogout\": {\n                        \"enabled\": \"<boolean>\",\n                        \"returnToUrls\": [\n                            \"<string>\",\n                            \"<string>\"\n                        ]\n                    }\n                },\n                \"requestValidation\": {\n                    \"enableSignatureValidation\": true,\n                    \"signatureValidationCertAlias\": \"<string>\"\n                },\n                \"responseSigning\": {\n                    \"enabled\": true,\n                    \"signingAlgorithm\": \"<string>\"\n                },\n                \"enableAssertionQueryProfile\": \"<boolean>\"\n            }\n        },\n        \"oidc\": {\n            \"grantTypes\": [\n                \"authorization_code\",\n                \"password\"\n            ],\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"callbackURLs\": [\n                \"https://app.example.com/callback1\",\n                \"https://app.example.com/callback2\"\n            ],\n            \"allowedOrigins\": [\n                \"https://app.example.com/js\"\n            ],\n            \"publicClient\": false,\n            \"pkce\": {\n                \"mandatory\": false,\n                \"supportPlainTransformAlgorithm\": true\n            },\n            \"accessToken\": {\n                \"type\": \"JWT\",\n                \"userAccessTokenExpiryInSeconds\": 3600,\n                \"applicationAccessTokenExpiryInSeconds\": 3600\n            },\n            \"refreshToken\": {\n                \"expiryInSeconds\": 86400,\n                \"renewRefreshToken\": true\n            },\n            \"idToken\": {\n                \"expiryInSeconds\": 3600,\n                \"audience\": [\n                    \"http://idp.xyz.com\",\n                    \"http://idp.abc.com\"\n                ],\n                \"encryption\": {\n                    \"enabled\": false,\n                    \"algorithm\": \"RSA-OAEP\",\n                    \"method\": \"A128CBC+HS256\"\n                }\n            },\n            \"logout\": {\n                \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n                \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n            },\n            \"validateRequestObjectSignature\": false,\n            \"scopeValidators\": [\n                \"XACMLScopeValidator\",\n                \"RoleBasedScopeValidator\"\n            ]\n        },\n        \"passiveSts\": {\n            \"realm\": \"<string>\",\n            \"replyTo\": \"<string>\"\n        },\n        \"wsTrust\": {\n            \"audience\": \"https://wstrust.endpoint.com\",\n            \"certificateAlias\": \"wso2carbon\"\n        },\n        \"custom\": [\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?template=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "template",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "<string>",
									"description": "Location of the newly created application."
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"pickup\",\n    \"description\": \"This is the configuration for Pickup application.\",\n    \"imageUrl\": \"https://example.com/logo/my-logo.png\",\n    \"accessUrl\": \"https://example.com/login\",\n    \"claimConfiguration\": {\n        \"dialect\": \"LOCAL\",\n        \"claimMappings\": [\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            },\n            {\n                \"applicationClaim\": \"firstname\",\n                \"localClaim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                }\n            }\n        ],\n        \"requestedClaims\": [\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            },\n            {\n                \"claim\": {\n                    \"uri\": \"http://wso2.org/claims/username\"\n                },\n                \"mandatory\": false\n            }\n        ],\n        \"subject\": {\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            },\n            \"includeUserDomain\": false,\n            \"includeTenantDomain\": false,\n            \"useMappedLocalSubject\": false\n        },\n        \"role\": {\n            \"mappings\": [\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                },\n                {\n                    \"localRole\": \"admin\",\n                    \"applicationRole\": \"Administrator\"\n                }\n            ],\n            \"includeUserDomain\": true,\n            \"claim\": {\n                \"uri\": \"http://wso2.org/claims/username\"\n            }\n        }\n    },\n    \"inboundProtocolConfiguration\": {\n        \"saml\": {\n            \"metadataFile\": \"Base64 encoded metadata file content\",\n            \"metadataURL\": \"https://example.com/samlsso/meta\",\n            \"manualConfiguration\": {\n                \"issuer\": \"<string>\",\n                \"assertionConsumerUrls\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"serviceProviderQualifier\": \"<string>\",\n                \"defaultAssertionConsumerUrl\": \"<string>\",\n                \"idpEntityIdAlias\": \"<string>\",\n                \"singleSignOnProfile\": {\n                    \"bindings\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"enableSignatureValidationForArtifactBinding\": \"<boolean>\",\n                    \"enableIdpInitiatedSingleSignOn\": \"<boolean>\",\n                    \"assertion\": {\n                        \"nameIdFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n                        \"audiences\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"recipients\": [\n                            \"https://app.example.com/saml\"\n                        ],\n                        \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\",\n                        \"encryption\": {\n                            \"enabled\": \"<boolean>\",\n                            \"assertionEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\",\n                            \"keyEncryptionAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"\n                        }\n                    }\n                },\n                \"attributeProfile\": {\n                    \"enabled\": \"<boolean>\",\n                    \"alwaysIncludeAttributesInResponse\": \"<boolean>\"\n                },\n                \"singleLogoutProfile\": {\n                    \"enabled\": true,\n                    \"logoutRequestUrl\": \"<string>\",\n                    \"logoutResponseUrl\": \"<string>\",\n                    \"logoutMethod\": \"<string>\",\n                    \"idpInitiatedSingleLogout\": {\n                        \"enabled\": \"<boolean>\",\n                        \"returnToUrls\": [\n                            \"<string>\",\n                            \"<string>\"\n                        ]\n                    }\n                },\n                \"requestValidation\": {\n                    \"enableSignatureValidation\": true,\n                    \"signatureValidationCertAlias\": \"<string>\"\n                },\n                \"responseSigning\": {\n                    \"enabled\": true,\n                    \"signingAlgorithm\": \"<string>\"\n                },\n                \"enableAssertionQueryProfile\": \"<boolean>\"\n            }\n        },\n        \"oidc\": {\n            \"grantTypes\": [\n                \"authorization_code\",\n                \"password\"\n            ],\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"callbackURLs\": [\n                \"https://app.example.com/callback1\",\n                \"https://app.example.com/callback2\"\n            ],\n            \"allowedOrigins\": [\n                \"https://app.example.com/js\"\n            ],\n            \"publicClient\": false,\n            \"pkce\": {\n                \"mandatory\": false,\n                \"supportPlainTransformAlgorithm\": true\n            },\n            \"accessToken\": {\n                \"type\": \"JWT\",\n                \"userAccessTokenExpiryInSeconds\": 3600,\n                \"applicationAccessTokenExpiryInSeconds\": 3600\n            },\n            \"refreshToken\": {\n                \"expiryInSeconds\": 86400,\n                \"renewRefreshToken\": true\n            },\n            \"idToken\": {\n                \"expiryInSeconds\": 3600,\n                \"audience\": [\n                    \"http://idp.xyz.com\",\n                    \"http://idp.abc.com\"\n                ],\n                \"encryption\": {\n                    \"enabled\": false,\n                    \"algorithm\": \"RSA-OAEP\",\n                    \"method\": \"A128CBC+HS256\"\n                }\n            },\n            \"logout\": {\n                \"backChannelLogoutUrl\": \"https://app.example.com/backchannel/callback\",\n                \"frontChannelLogoutUrl\": \"https://app.example.com/frontchannel/callback\"\n            },\n            \"validateRequestObjectSignature\": false,\n            \"scopeValidators\": [\n                \"XACMLScopeValidator\",\n                \"RoleBasedScopeValidator\"\n            ]\n        },\n        \"passiveSts\": {\n            \"realm\": \"<string>\",\n            \"replyTo\": \"<string>\"\n        },\n        \"wsTrust\": {\n            \"audience\": \"https://wstrust.endpoint.com\",\n            \"certificateAlias\": \"wso2carbon\"\n        },\n        \"custom\": [\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"cas\",\n                \"configName\": \"cas\",\n                \"properties\": [\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    },\n                    {\n                        \"key\": \"app-identifier\",\n                        \"value\": \"http://app.wso2.com/employeeApp\",\n                        \"friendlyName\": \"Application Identifier\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"authenticationSequence\": {\n        \"type\": \"DEFAULT\",\n        \"steps\": [\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"options\": [\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    },\n                    {\n                        \"idp\": \"LOCAL\",\n                        \"authenticator\": \"basic\"\n                    }\n                ]\n            }\n        ],\n        \"requestPathAuthenticators\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"script\": \"<string>\",\n        \"subjectStepId\": 1,\n        \"attributeStepId\": 1\n    },\n    \"advancedConfigurations\": {\n        \"saas\": false,\n        \"discoverableByEndUsers\": false,\n        \"certificate\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"skipConsent\": false,\n        \"returnAuthenticatedIdpList\": false,\n        \"enableAuthorization\": true\n    },\n    \"provisioningConfigurations\": {\n        \"inboundProvisioning\": {\n            \"proxyMode\": false,\n            \"provisioningUserstoreDomain\": \"PRIMARY\"\n        },\n        \"outboundProvisioningIdps\": [\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            },\n            {\n                \"idp\": \"Google\",\n                \"connector\": \"googleapps\",\n                \"blocking\": false,\n                \"rules\": false,\n                \"jit\": false\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1/applications?template=<string>",
									"protocol": "https",
									"host": [
										"{{server-url}}"
									],
									"path": [
										"t",
										"{{tenant-domain}}",
										"api",
										"server",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "template",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AAA-00000\",\n \"message\": \"Some error message.\",\n \"description\": \"Some error description.\",\n \"traceId\": \"e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "admin",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "tenant-domain",
			"value": "carbon.super",
			"type": "string"
		},
		{
			"key": "server-url",
			"value": "is.wso2isdemo.com",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "https://{{server-url}}/t/{{tenant-domain}}/api/server/v1",
			"type": "string"
		},
		{
			"key": "username",
			"value": "john@guardio.com"
		}
	]
}
